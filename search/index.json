[{"content":"","date":"2024-10-03T21:50:53+08:00","image":"https://picsum.photos/800/600.webp?random=e930a54d","permalink":"https://lazman-ll.github.io/p/mytest5/","title":"Mytest5"},{"content":"","date":"2024-10-03T21:49:10+08:00","permalink":"https://lazman-ll.github.io/p/mytest4/","title":"Mytest4"},{"content":"","date":"2024-10-03T21:42:53+08:00","permalink":"https://lazman-ll.github.io/p/mytest3/","title":"Mytest3"},{"content":"","date":"2024-10-03T21:40:13+08:00","permalink":"https://lazman-ll.github.io/p/mytest2/","title":"Mytest2"},{"content":"","date":"2024-10-03T21:37:51+08:00","permalink":"https://lazman-ll.github.io/p/mytest/","title":"Mytest"},{"content":"本文描述了黑马springcloud项目学成在线的环境搭建过程\n1 开发工具版本 本项目主要使用的开发工具列表如下所示：\n开发工具 版本号 安装位置 IntelliJ-IDEA 2021.x以上版本 个人电脑 JDK 1.8.x 个人电脑 Maven 3.8.x以上版本 个人电脑 Git 2.37.x 个人电脑 VMware-workstation 16.x 个人电脑 CentOS 7.x 虚拟机 Docker 18.09.0 虚拟机 Mysql 8.x docker nacos 1.4.1 docker rabbitmq 3.8.34 docker redis 6.2.7 docker xxl-job-admin 2.3.1 docker minio RELEASE.2022-09-07 docker elasticsearch 7.12.1 docker kibana 7.12.1 docker gogs 0.13.0 docker nginx 1.12.2 docker 2 IDEA 环境配置 2.1 创建GitHub仓库 2.2 在IDEA中拉取GitHub中的仓库 创建项目时，选择通过版本控制创建项目(Get from VCS)\n输入仓库地址，并选择工程路径。\n2.3 编码配置 2.4 设置Java编译级别 本项目使用jdk8作为项目语言环境，故需要设置Java的编译环境：\n工程创建成功后，点击Project Structure：\n点击Project，设置SDK为1.8及Project language level，如下图：\n3 Maven 环境 3.1 配置maven仓库 解压课程资料中的maven仓库下的repository.zip到你的maven工作目录(或者随便一个目录)中\n在maven的conf目录中的setting.xml文件中配置本地仓库的地址，为刚才repository.zip的地址\n​\t3.2 IDEA中配置maven 在IDEA中配置maven：进入 File \u0026ndash;\u0026gt; Settings \u0026ndash;\u0026gt; Build \u0026ndash;\u0026gt; Build Tools \u0026ndash;\u0026gt; Maven，配置maven安装目录、setting.xml及本地仓库的位置。\n​\t①代表你的maven安装的位置，若以前用过maven，一般不用修改\n②代表你的maven的配置文件所在地址\n③代表你使用的本地仓库的地址(注意：最后一级目录是你所有依赖的前一级)\n4 安装虚拟机 项目中用到的一些服务端软件如：MySQL、Nacos配置中心、RabbitMQ消息队列等通常会安装在企业局域网的服务器中，开发人员去远程连接它们。在本项目中我们在自己的电脑上安装虚拟机，虚拟机代表了企业局域网中的服务器。\n服务器操作系统使用Centos7，导入黑马课程中的虚拟机文件(包含了所有的需要安装的服务端软件)，也可以自行安装Centos7虚拟机(服务端软件需要自己安装)。\n4.1 设置虚拟机网络 点击 “编辑\u0026ndash;》虚拟网络编辑器”配置网络地址，地址须与下图一致。\n设置子网IP：192.168.101.0，子网掩码：255.255.255.0。\n4.2 导入虚拟机 解压课程资料中的虚拟机文件，进入解压后的文件夹，双击\u0026quot;CentOS 7 64 位.vmx\u0026quot; 文件，选择复制虚拟机。(博主在实操过程中并未出现复制虚拟机选项，而是直接跳转到了vm界面中，但是在开启该虚拟机时，有一个选项要求我选择\u0026quot;已复制虚拟机\u0026quot;或\u0026quot;已移动虚拟机\u0026quot;，我选择了已复制，此处不知是否有问题？)\n注意：虚拟机的IP地址为192.168.101.65，不用修改IP地址。\n4.3 远程连接虚拟机 博主使用了MobaXterm 远程连接虚拟机中的CentOs系统，具体连接过程可自行上网搜索\nIP地址：192.168.101.65\n账号与密码为：root/centos\n连接完毕执行以下命令\n执行 systemctl start docker 启动docker。\n运行： sh /data/soft/restart.sh\n查询docker容器：docker ps，执行完毕后，docker容器运行情况如下图：\n​\t4.3 数据库客户端连接虚拟机中的MySQL 博主使用的Navicat进行连接\n所有数据库信息如下：其中包含了本项目所有要用的数据库，一般以后无需创建\n​\t5 Git环境配置 5.1 添加.gitignore文件 ​\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 HELP.md target/ !.mvn/wrapper/maven-wrapper.jar !**/src/main/** !**/src/test/** ### STS ### .apt_generated .classpath .factorypath .project .settings .springBeans .sts4-cache ### IntelliJ IDEA ### .idea *.iws *.iml *.ipr ### NetBeans ### /nbproject/private/ /nbbuild/ /dist/ /nbdist/ /.nb-gradle/ build/ logs/ ### VS Code ### .vscode/ 提交到git仓库当中\n5.2 创建开发分支 通常不会在主分支进行开发，本项目在dev开发分支进行开发(每一章节一个)，下边创建开发分支。\n新建一个分支，点击IDEA右下角的分支标识：\n输入分支名称：\n​\t点击create即创建成功，打卡Git log，其中标识了小铅笔的就是当前分支\n然后将分支push到github上即可\n6 基础工程搭建 6.1 工程结构关系 学成在线使用 Maven 来进行项目的管理和构建。整个项目分为三大类工程：父工程、基础工程 和微服务工程。\n​\t每一种类的工程都有不同的作用，下面时对其功能进行说明：\n父工程\n对依赖包的版本进行管理\n本身为Pom工程，对子工程进行聚合管理\n基础工程\n继承父类工程\n提供基础类库\n提供工具类库\n微服务工程\n分别从业务、技术方面划分模块，每个模块构建为一个微服务。\n每个微服务工程依赖基础工程，间接继承父工程。\n包括：内容管理服务、媒资管理服务、搜索服务、订单支付服务等。\n6.2 构建父工程 父工程的职责是对依赖包的版本进行管理，本小节创建父工程分两步，第一创建父工程，第二在pom.xml编辑依赖管理。\n首先创建父工程，为了对代码更好的进行权限管理，这里我们单独创建父工程。选择Spring Initalizr，填写模块信息：\n模块名：xuecheng-plus-parent\n包名：com.xuecheng\n依赖管理定义\n下边开始编辑xuecheng-plus-parent父工程的依赖管理 。\n父工程中没有代码，不用去依赖其它的包，它的作用是限定其它子工程依赖包的版本号，即在dependencyManagement 中去编辑即可。\n确定父工程为一个pom工程，在pom.xml中添加如下内容：\n\u0026lt;packaging\u0026gt;pom\u0026lt;/packaging\u0026gt;\n编辑依赖的包的版本号、打包插件等。\nu0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;project xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u0026gt; \u0026lt;modelVersion\u0026gt;4.0.0\u0026lt;/modelVersion\u0026gt; \u0026lt;groupId\u0026gt;com.xuecheng\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;xuecheng-plus-parent\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;0.0.1-SNAPSHOT\u0026lt;/version\u0026gt; \u0026lt;name\u0026gt;xuecheng-plus-parent\u0026lt;/name\u0026gt; \u0026lt;description\u0026gt;xuecheng-plus-parent\u0026lt;/description\u0026gt; \u0026lt;packaging\u0026gt;pom\u0026lt;/packaging\u0026gt; \u0026lt;properties\u0026gt; \u0026lt;java.version\u0026gt;1.8\u0026lt;/java.version\u0026gt; \u0026lt;project.build.sourceEncoding\u0026gt;UTF-8\u0026lt;/project.build.sourceEncoding\u0026gt; \u0026lt;project.reporting.outputEncoding\u0026gt;UTF-8\u0026lt;/project.reporting.outputEncoding\u0026gt; \u0026lt;spring-boot.version\u0026gt;2.3.7.RELEASE\u0026lt;/spring-boot.version\u0026gt; \u0026lt;spring-cloud.version\u0026gt;Hoxton.SR9\u0026lt;/spring-cloud.version\u0026gt; \u0026lt;org.mapstruct.version\u0026gt;1.3.1.Final\u0026lt;/org.mapstruct.version\u0026gt; \u0026lt;spring-cloud-alibaba.version\u0026gt;2.2.6.RELEASE\u0026lt;/spring-cloud-alibaba.version\u0026gt; \u0026lt;org.projectlombok.version\u0026gt;1.18.8\u0026lt;/org.projectlombok.version\u0026gt; \u0026lt;javax.servlet-api.version\u0026gt;4.0.1\u0026lt;/javax.servlet-api.version\u0026gt; \u0026lt;fastjson.version\u0026gt;1.2.83\u0026lt;/fastjson.version\u0026gt; \u0026lt;druid-spring-boot-starter.version\u0026gt;1.2.8\u0026lt;/druid-spring-boot-starter.version\u0026gt; \u0026lt;mysql-connector-java.version\u0026gt;8.0.30\u0026lt;/mysql-connector-java.version\u0026gt; \u0026lt;mybatis-plus-boot-starter.version\u0026gt;3.4.1\u0026lt;/mybatis-plus-boot-starter.version\u0026gt; \u0026lt;commons-lang.version\u0026gt;2.6\u0026lt;/commons-lang.version\u0026gt; \u0026lt;minio.version\u0026gt;8.4.3\u0026lt;/minio.version\u0026gt; \u0026lt;xxl-job-core.version\u0026gt;2.3.1\u0026lt;/xxl-job-core.version\u0026gt; \u0026lt;swagger-annotations.version\u0026gt;1.5.20\u0026lt;/swagger-annotations.version\u0026gt; \u0026lt;commons-lang3.version\u0026gt;3.10\u0026lt;/commons-lang3.version\u0026gt; \u0026lt;okhttp.version\u0026gt;4.8.1\u0026lt;/okhttp.version\u0026gt; \u0026lt;swagger-spring-boot-starter.version\u0026gt;1.9.0.RELEASE\u0026lt;/swagger-spring-boot-starter.version\u0026gt; \u0026lt;elasticsearch.version\u0026gt;7.12.1\u0026lt;/elasticsearch.version\u0026gt; \u0026lt;/properties\u0026gt; \u0026lt;dependencyManagement\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.cloud\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-cloud-dependencies\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${spring-cloud.version}\u0026lt;/version\u0026gt; \u0026lt;type\u0026gt;pom\u0026lt;/type\u0026gt; \u0026lt;scope\u0026gt;import\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-dependencies\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${spring-boot.version}\u0026lt;/version\u0026gt; \u0026lt;type\u0026gt;pom\u0026lt;/type\u0026gt; \u0026lt;scope\u0026gt;import\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.alibaba.cloud\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-cloud-alibaba-dependencies\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${spring-cloud-alibaba.version}\u0026lt;/version\u0026gt; \u0026lt;type\u0026gt;pom\u0026lt;/type\u0026gt; \u0026lt;scope\u0026gt;import\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- lombok，简化类的构建--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.projectlombok\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;lombok\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${org.projectlombok.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- mapstruct 代码生成器，简化java bean之间的映射 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.mapstruct\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mapstruct-jdk8\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${org.mapstruct.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.mapstruct\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mapstruct-processor\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${org.mapstruct.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;io.swagger\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;swagger-annotations\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${swagger-annotations.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- Servlet 容器管理 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;javax.servlet\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;javax.servlet-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${javax.servlet-api.version}\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;provided\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- fastjson ，json解析工具 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.alibaba\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;fastjson\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${fastjson.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- druid 连接池管理 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.alibaba\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;druid-spring-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${druid-spring-boot-starter.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- mySQL数据库驱动包管理 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;mysql\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mysql-connector-java\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${mysql-connector-java.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- mybatis plus 集成Spring Boot启动器 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.baomidou\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis-plus-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${mybatis-plus-boot-starter.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- mybatis plus 代码生成器 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.baomidou\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis-plus-generator\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${mybatis-plus-boot-starter.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- 工具类管理 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;commons-lang\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-lang\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${commons-lang.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- 分布式文件系统 minIO的客户端API包 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;io.minio\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;minio\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${minio.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--google推荐的一套工具类库--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.google.guava\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;guava\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;25.0-jre\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--分布式任务调度--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.xuxueli\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;xxl-job-core\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${xxl-job-core.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--Spring boot单元测试--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-test\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${spring-boot.version}\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;exclusions\u0026gt; \u0026lt;exclusion\u0026gt; \u0026lt;groupId\u0026gt;org.junit.vintage\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;junit-vintage-engine\u0026lt;/artifactId\u0026gt; \u0026lt;/exclusion\u0026gt; \u0026lt;/exclusions\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.squareup.okhttp3\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;okhttp\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${okhttp.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.commons\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-lang3\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${commons-lang3.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.spring4all\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;swagger-spring-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${swagger-spring-boot-starter.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.elasticsearch.client\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;elasticsearch-rest-high-level-client\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${elasticsearch.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.elasticsearch\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;elasticsearch\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${elasticsearch.version}\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;/dependencyManagement\u0026gt; \u0026lt;build\u0026gt; \u0026lt;finalName\u0026gt;${project.name}\u0026lt;/finalName\u0026gt; \u0026lt;!--编译打包过虑配置--\u0026gt; \u0026lt;resources\u0026gt; \u0026lt;resource\u0026gt; \u0026lt;directory\u0026gt;src/main/resources\u0026lt;/directory\u0026gt; \u0026lt;filtering\u0026gt;true\u0026lt;/filtering\u0026gt; \u0026lt;includes\u0026gt; \u0026lt;include\u0026gt;**/*\u0026lt;/include\u0026gt; \u0026lt;/includes\u0026gt; \u0026lt;/resource\u0026gt; \u0026lt;resource\u0026gt; \u0026lt;directory\u0026gt;src/main/java\u0026lt;/directory\u0026gt; \u0026lt;includes\u0026gt; \u0026lt;include\u0026gt;**/*.xml\u0026lt;/include\u0026gt; \u0026lt;/includes\u0026gt; \u0026lt;/resource\u0026gt; \u0026lt;/resources\u0026gt; \u0026lt;plugins\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.maven.plugins\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-compiler-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.8.1\u0026lt;/version\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;!--指定项目源码jdk的版本--\u0026gt; \u0026lt;source\u0026gt;1.8\u0026lt;/source\u0026gt; \u0026lt;!--指定项目编译后的jdk的版本--\u0026gt; \u0026lt;target\u0026gt;1.8\u0026lt;/target\u0026gt; \u0026lt;!--配置注解预编译--\u0026gt; \u0026lt;annotationProcessorPaths\u0026gt; \u0026lt;path\u0026gt; \u0026lt;groupId\u0026gt;org.projectlombok\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;lombok\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;${org.projectlombok.version}\u0026lt;/version\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;/annotationProcessorPaths\u0026gt; \u0026lt;/configuration\u0026gt; \u0026lt;/plugin\u0026gt; \u0026lt;!--责处理项目资源文件并拷贝到输出目录，如果有额外的资源文件目录则需要配置--\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.maven.plugins\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-resources-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.3.0\u0026lt;/version\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;encoding\u0026gt;utf-8\u0026lt;/encoding\u0026gt; \u0026lt;!--使用默认分隔符，resource中可以使用分割符定义过虑的路径--\u0026gt; \u0026lt;useDefaultDelimiters\u0026gt;true\u0026lt;/useDefaultDelimiters\u0026gt; \u0026lt;/configuration\u0026gt; \u0026lt;/plugin\u0026gt; \u0026lt;/plugins\u0026gt; \u0026lt;/build\u0026gt; \u0026lt;/project\u0026gt; 6.3 构建基础工程 基础工程的职责是提供一些系统架构所需要的基础类库以及一此工具类库。\n首先创建基础工程xuecheng-plus-base。创建的过程同父工程的创建过程，选择Spring Initalizr，填写模块信息：\n模块名：xuecheng-plus-base 包名：com.xuecheng 修改pom.xml文件\n这里需要注意的是xuecheng-plus-base的父工程为xuecheng-plus-parent，xuecheng-plus-base的pom.xml的如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;project xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u0026gt; \u0026lt;modelVersion\u0026gt;4.0.0\u0026lt;/modelVersion\u0026gt; \u0026lt;parent\u0026gt; \u0026lt;groupId\u0026gt;com.xuecheng\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;xuecheng-plus-parent\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;0.0.1-SNAPSHOT\u0026lt;/version\u0026gt; \u0026lt;relativePath\u0026gt;../xuecheng-plus-parent\u0026lt;/relativePath\u0026gt; \u0026lt;/parent\u0026gt; \u0026lt;artifactId\u0026gt;xuecheng-plus-base\u0026lt;/artifactId\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.projectlombok\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;lombok\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.commons\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-lang3\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- fast Json --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.alibaba\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;fastjson\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- servlet Api 依赖 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;javax.servlet\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;javax.servlet-api\u0026lt;/artifactId\u0026gt; \u0026lt;scope\u0026gt;provided\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- 通用组件 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;commons-lang\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-lang\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;commons-codec\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-codec\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.11\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;io.swagger\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;swagger-annotations\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-web\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-validation\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-log4j2\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--根据扩展名取mimetype--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.j256.simplemagic\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;simplemagic\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.17\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.commons\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-lang3\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.google.zxing\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;core\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.3.3\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.google.zxing\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;javase\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.3.3\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.fasterxml.jackson.module\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;jackson-module-parameter-names\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.fasterxml.jackson.datatype\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;jackson-datatype-jdk8\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.fasterxml.jackson.datatype\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;jackson-datatype-jsr310\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;/project\u0026gt; 最后将父工程和基础工程提交到git上即可。\n","date":"2024-10-02T00:00:00Z","image":"https://lazman-ll.github.io/p/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BF%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://lazman-ll.github.io/p/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BF%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"学成在线环境搭建"},{"content":"本博客使用了Hugo+Github的方法进行博客搭建，博客的搭建日期为2024-10-01，本文首次更新日期为2024-10-01，下面将详细介绍本博客的搭建方法。\nHugo的搭建 1.1 hugo的下载 进入Hugo下载地址网址选择最新的版本，当前最新版本为：v0.135.0，点击进入\nwindows环境：选择 hugo_extended_0.135.0_windows-amd64.zip，进行下载，并解压。\n1.2 创建博客 在解压后得到的文件的目录下进入命令行窗口，输入hugo new site xxxx（xxxx写文件的名字，自己取即可）以创建hugo文件\n将解压得到的hugo.exe复制到创建好的hugo文件中，然后输入cd xxxx 切换目录\n1.3 配置主题 前往Hugo Themes，挑选喜欢的主图，进行下载，这里我选用了stack主题\n以Stack主题为例，将下载好的主题解压，放到xxxx/themes文件夹下\n将exampleSite文件夹下的content文件夹以及hugo.yaml文件，复制到主文件夹下(即前面的xxxx，后面都为主文件夹)，并删除掉hugo.toml和content/post/rich-content\n修改hugo.yaml中的theme配置，将其修改为与主题的文件夹名一致，或者反过来修改主题文件夹名，只要保证两者一致即可。\n在命令行中键入hugo server -D，启动hugo服务，查看主题，具体的主题配置修改hugo.yaml即可，详情可看 Hugo 主题 Stack (中文)(非官方)或者Hugo 主题 Stack(官方)\nGithub搭建 此处需要git和GitHub账号，可自行在网上查找如何配置\n2.1 静态界面部署 进入GitHub，创建仓库**{github用户名}.github.io**，并设置为public\n前往Setting -\u0026gt; Pages -\u0026gt; Branch选择main分支，然后保存，会自动开启https://{github用户名}.github.io的地址，该地址即博客地址\n修改hugo.yaml的baseurl为https://{github用户名}.github.io\n在主文件夹下进入命令行，键入huge -D，会生成public静态资源文件夹\n在public下进入命令行，依次执行如下命令，将资源上传到Github中，下面的命令在你的Github创建成功仓库的界面有，直接复制即可(第二条命令要与下面的一致)\n1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main 上传成功后即可访问https://{github用户名}.github.io，查看自己的博客\n2.2 hugo部署(实现Github Action自动部署) 在Github中创建一个新的仓库，存放hugo主文件，此处设置为private即可\n前往Setttings -\u0026gt; Developer Settings -\u0026gt; Personal access tokens，创建一个token(classic)，有效期选择永久，(否则失效后需要重新配置，但是若为了安全，可以自行选择)，勾选repo和workflow，创建。\n将生成的token，保存在仓库的变量中，进入刚刚创建的仓库，前往Settings -\u0026gt; Secrets and variables -\u0026gt; Actions中设置\n在hugo主文件创建一个.github/workflows/xxxx.yaml文件，将以下内容复制进去，想具体了解更多，可查看Github Action文档\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.你的token变量名 }} EXTERNAL_REPOSITORY: 你的github名/你的仓库名 PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 在hugo主文件创建.gitignore文件，来避免提交不必要的文件\n将hugo的主文件上传到仓库，上传成功后会触发Github Action，来自动部署你的静态页面\n1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main 以后修改了文件后就无需输入上述这么多命令，在主文件夹下进入命令行，输入如下命令即可，有时候git push失败可以多试几次\n1 2 3 git add . git commit -m \u0026#34;update\u0026#34; git push ","date":"2024-10-01T00:00:00Z","image":"https://lazman-ll.github.io/p/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/github-hugo_hu12902404653766232079.png","permalink":"https://lazman-ll.github.io/p/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","title":"博客搭建"}]